{"version":3,"sources":["./src/app/shared/components/input-range/input-range.component.ts","./src/app/shared/components/input-range/input-range.component.html","./src/environments/environment.ts","./src/app/shared/components/band/band.component.ts","./src/app/shared/components/band/band.component.html","./src/app/shared/utilities/BaseControlValueAccessor.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/timeline/timeline.component.ts","./src/app/timeline/timeline.component.html","./src/app/app.module.ts","./src/app/shared/services/wasm.service.ts","./src/app/shared/services/window.service.ts","./src/app/sys-sound/sys-sound.component.ts","./src/app/sys-sound/sys-sound.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { BaseControlValueAccessor } from '@shared/utilities/BaseControlValueAccessor';\n\n@Component({\n    selector: 'input-range',\n    templateUrl: './input-range.component.html',\n    styleUrls: ['./input-range.component.scss'],\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => InputRangeComponent),\n        multi: true\n    }]\n})\nexport class InputRangeComponent extends BaseControlValueAccessor<any> implements OnInit {\n    @Input() value: string = '2.5';\n    @Input() name: string = '';\n    @Input() forID: string; // id value to match a parent label\n    @Input() max: number = 255;\n    @Input() step: number = 1;\n    @Input() disabled = false;\n\n    constructor() { super();  }\n\n    public ngOnInit(): void {}\n\n    public writeValue(val: string): void {\n        this.value = val;\n        this.onChange(+this.value); // set the control/form value\n    }\n\n    public onInput(val: string): void {\n        this.value = val;\n        this.onChange(+this.value); // set the control/form value\n    }\n}\n","<label class=\"range__label\">\n    <input type=\"range\"\n        [id]=\"forID\"\n        class=\"range__input\"\n        [max]=\"max\"\n        [step]=\"step\"\n        (touch)=\"onTouched()\"\n        [ngModel]=\"value\"\n        (ngModelChange)=\"onInput($event)\"\n        [name]=\"name\"\n        [disabled]=\"disabled\"\n        tabindex=\"0\"\n        orient=\"vertical\">\n</label>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, ElementRef, EventEmitter, forwardRef, Input, OnDestroy, OnInit, Output, Renderer2 } from '@angular/core';\nimport { FormBuilder, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { BaseControlValueAccessor } from '@shared/utilities/BaseControlValueAccessor';\n\n@Component({\n    selector: 'band',\n    templateUrl: './band.component.html',\n    styleUrls: ['./band.component.scss'],\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => BandComponent),\n        multi: true\n    }]\n})\nexport class BandComponent extends BaseControlValueAccessor<any> implements OnInit, OnDestroy {\n    private _ngUnsubscribe: Subject<void> = new Subject<void>();\n    @Input() set dB(value: number) {\n        this.peak = value;\n        this.score = this.form.controls.range.value < value ? value - this.form.controls.range.value : 0;\n    }\n\n    @Input() id: number = 0;\n    @Output() senseVal = new EventEmitter<number>();\n    public peak: number = 0; // public dB level\n    public percent: number = 50; // range value is what percentage of 0 - 255\n    public score: number = 0; // dB peaks into the range value this much\n    public form = <FormGroup>this.fb.group({\n        range: this.fb.control(null)\n    });\n\n    constructor(\n        private fb: FormBuilder,\n        private renderer: Renderer2,\n        private elementRef: ElementRef\n    ) { super(); } // required methods are within BaseControlValueAccessor\n\n    public ngOnInit(): void {\n\n        this.form.patchValue({\n            range: 50\n        },\n            {\n                emitEvent: false,\n                onlySelf: true\n            });\n\n        this.form.controls['range'].valueChanges\n            .pipe(\n                takeUntil(this._ngUnsubscribe)\n            ).subscribe((val: any) => {\n                this.percent = parseInt(((val / 255) * 100).toFixed());\n                this.renderer.setStyle(this.elementRef.nativeElement, 'background-image', `linear-gradient(rgba(253,92,99,1), rgba(144,255,0,1) ${this.percent}%)`);\n                this.senseVal.emit(val);\n            });\n    }\n\n    // init value\n    public writeValue(val: string): void {\n        this.value = val;\n        this.onChange(+this.value); // set the control/form value\n    }\n\n    public onInput(val: string): void {\n        this.value = val;\n        this.onChange(+this.value); // set the control/form value\n    }\n\n    public ngOnDestroy(): void {\n        this._ngUnsubscribe.next();\n        this._ngUnsubscribe.complete();\n    }\n}\n","<p class=\"score\"><span title=\"sensitivity\">{{percent}}</span> &nbsp;/ <span title=\"peaking\">{{score}}</span></p>\n<form class=\"range-form\" [formGroup]=\"form\" (keydown.enter)=\"$event.preventDefault()\">\n    <input-range formControlName=\"range\"></input-range>\n</form>\n<div class=\"eqband\" [ngStyle]=\"{'padding-top': peak+'px'}\"></div>\n","import { ControlValueAccessor } from '@angular/forms';\n\nexport class BaseControlValueAccessor<T> implements ControlValueAccessor {\n    public disabled = false;\n\n    /**\n     * Call when value has changed programmatically\n     */\n    public onChange(newVal: T) { }\n    public onTouched(_?: any) { }\n    public value: T;\n\n    /**\n     * Model -> View changes\n     */\n    public writeValue(obj: T): void { this.value = obj; }\n    public registerOnChange(fn: any): void { this.onChange = fn; }\n    public registerOnTouched(fn: any): void { this.onTouched = fn; }\n    public setDisabledState?(isDisabled: boolean): void { this.disabled = isDisabled; }\n}\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\n\nimport { WasmService } from '@shared/services/wasm.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n\n    constructor(private wasmService: WasmService) {}\n\n    public ngOnInit(): void {}\n\n    public ngAfterViewInit(){\n        this.wasmService.runEmbeddedConnectionExample();\n    }\n\n}\n","<sys-sound></sys-sound>\n","import { Component, OnInit } from '@angular/core';\n\n// import * as Timeline from 'src/assets/libs/timeliner.min.js';\n\n@Component({\n    selector: 'app-timeline',\n    templateUrl: './timeline.component.html',\n    styleUrls: ['./timeline.component.scss']\n})\nexport class TimelineComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n        // console.log(Timeline);\n    }\n\n}\n","<p>timeline works!</p>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { SysSoundComponent } from './sys-sound/sys-sound.component';\nimport { WINDOW_PROVIDERS } from './shared/services/window.service';\nimport { BandComponent } from './shared/components/band/band.component';\nimport { InputRangeComponent } from '@shared/components/input-range/input-range.component';\nimport { TimelineComponent } from './timeline/timeline.component';\n\n// import * as Timeline from 'src/assets/libs/timeliner.min.js';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        SysSoundComponent,\n        BandComponent,\n        InputRangeComponent,\n        TimelineComponent\n    ],\n    imports: [\n        BrowserModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule,\n        // Timeline\n    ],\n    providers: [\n        ...WINDOW_PROVIDERS\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs'\nimport { filter, map, take } from 'rxjs/operators'\n\n// https://buttplug-developer-guide.docs.buttplug.io/writing-buttplug-applications/connecting.html\nimport * as  Buttplug from 'node_modules/buttplug-wasm/dist/web/buttplug.js';\n// import * as bp from 'node_modules/buttplug-wasm/buttplug-wasm.web/buttplug_wasm.js';\n// import 'node_modules/buttplug-wasm/buttplug-wasm.web/buttplug_wasm_bg.wasm';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class WasmService {\n    // private _wasmReady$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    // public module: any;\n\n    constructor() {\n        console.log('wasmservice', Buttplug);\n        // this.instantiateWasm('buttplug-wasm/buttplug-wasm.web/buttplug_wasm_bg.wasm');\n\n    }\n\n    // https://malcoded.com/posts/web-assembly-angular/\n    private async instantiateWasm(url: string) {\n        // fetch the wasm file\n        // const wasmFile = await fetch(url);\n\n        // // convert it into a binary array\n        // const buffer = await wasmFile.arrayBuffer();\n        // const binary = new Uint8Array(buffer);\n\n        // // create module arguments\n        // // including the wasm-file\n        // const moduleArgs = {\n        //     wasmBinary: binary,\n        //     onRuntimeInitialized: () => {\n        //         // TODO\n        //     }\n        // };\n\n        // // instantiate the module\n        // this.module = Module(moduleArgs);\n    }\n\n    // public wasm(input: number): Observable<number> {\n    //     return this._wasmReady$.pipe(filter(value => value === true)).pipe(\n    //         take(1)\n    //     ).subscribe((res:any) => {\n    //         console.log(res);\n    //     });\n    // }\n\n\n    async runEmbeddedConnectionExample() {\n        // Instantiate our wasm module. This only needs to be done once. If you did it\n        // elsewhere, ignore this.\n        await Buttplug.buttplugInit();\n\n        // After you've created a connector, the connection looks the same no\n        // matter what, though the errors thrown may be different.\n        let connector = new Buttplug.ButtplugEmbeddedConnectorOptions();\n        let client = new Buttplug.ButtplugClient(\"Developer Guide Example\");\n\n        // Now we connect. If anything goes wrong here, we'll throw, but outside of an\n        // issue with arguments, embedded connections should never fail.\n        try {\n            await client.connect(connector);\n        }\n        catch (ex) {\n            // If we ever get there, it probably has something to do with our arguments\n            // being wrong.\n            console.log(ex);\n        }\n\n        // We're connected, yay!\n        console.log(\"Connected!\");\n\n        // And now we disconnect as usual\n        await client.disconnect();\n    };\n\n}\n","import { isPlatformBrowser } from \"@angular/common\";\nimport { ClassProvider, FactoryProvider, InjectionToken, PLATFORM_ID } from '@angular/core';\n\n// https://brianflove.com/2018-01-11/angular-window-provider/\n/* Create a new injection token for injecting the window into a component. */\nexport const WINDOW = new InjectionToken('WindowToken');\n\n/* Define abstract class for obtaining reference to the global window object. */\nexport abstract class WindowRef {\n    get nativeWindow(): Window | Object {\n        throw new Error('Not implemented.');\n    }\n}\n\n/* Define class that implements the abstract class and returns the native window object. */\nexport class BrowserWindowRef extends WindowRef {\n    constructor() {\n        super();\n    }\n\n    get nativeWindow(): Window | Object {\n        return window;\n    }\n}\n\n/* Create an factory function that returns the native window object. */\nfunction windowFactory(browserWindowRef: BrowserWindowRef, platformId: Object): Window | Object {\n    if (isPlatformBrowser(platformId)) {\n        return browserWindowRef.nativeWindow;\n    }\n    return new Object();\n}\n\n/* Create a injectable provider for the WindowRef token that uses the BrowserWindowRef class. */\nconst browserWindowProvider: ClassProvider = {\n    provide: WindowRef,\n    useClass: BrowserWindowRef\n};\n\n/* Create an injectable provider that uses the windowFactory function for returning the native window object. */\nexport const windowProvider: FactoryProvider = {\n    provide: WINDOW,\n    useFactory: windowFactory,\n    deps: [WindowRef, PLATFORM_ID]\n};\n\n/* Create an array of providers. */\nexport const WINDOW_PROVIDERS = [\n    browserWindowProvider,\n    windowProvider\n];\n","import { AfterViewInit, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector: 'sys-sound',\n    templateUrl: './sys-sound.component.html',\n    styleUrls: ['./sys-sound.component.scss']\n})\nexport class SysSoundComponent implements OnInit, AfterViewInit, OnDestroy {\n    private _ngUnsubscribe: Subject<void> = new Subject<void>();\n    private _intervalID: any; // AnimationFrame ID\n    private _source: any; // eventual stream source\n    private _fbc: any; // frequencyBinCount\n\n    private _data: Uint8Array; // final audio data in the standard format\n    private _audioDeviceId: string; // MediaDeviceInfo;\n    private _audioContext = new AudioContext();\n    private _analyser = this._audioContext.createAnalyser();\n\n    public devices: any[];\n    public bands: { dB?: number, sensitivity?: number }[] = []; // eq band objects for element height etc\n    public freqs: number[];\n\n    constructor() { }\n\n    public ngOnInit(): void {}\n\n    public ngAfterViewInit(): void {\n        // get and list the devices for selection\n        navigator.mediaDevices.enumerateDevices().then((devices: MediaDeviceInfo[]) => {\n            this.devices = devices.filter(device => device.kind == \"audiooutput\");\n        })\n        .catch(function (err) {\n            console.log(err.name + \": \" + err.message);\n        });\n    }\n\n    /* ------------------------------------------------------------------------ *\n        When sensitivity scores exist this method:\n        - Makes a request of some kind\n        - Probably want to debounce this\n    * ------------------------------------------------------------------------ */\n    private sensitivityRequest(amount:number){\n        // console.log(amount);\n    }\n\n    // Control the view\n    private frameLooper() {\n        // this._intervalID = requestAnimationFrame(() => this.frameLooper()); // doesnt run in background tabs, dont use it\n\n        // how many values from analyser (the \"buffer\" size)\n        this._fbc = this._analyser.frequencyBinCount;\n\n        const time = 1000 / 12; // 30 or 60 times per second\n        this._intervalID = setInterval(() => {\n            // frequency data comes as integers on a scale from 0 to 255\n            this._data = new Uint8Array(this._analyser.frequencyBinCount);\n            this._analyser.getByteFrequencyData(this._data);\n\n            // DEBUGGING WEBAUDIO\n            // console.log({ analyser: this._analyser });\n            // console.log({ frequencyBinCount: this._analyser.frequencyBinCount });\n            // console.log({ fbc: this.fbc });\n            // console.log({ _data: this._data });\n            // console.log({ sampleRate: this.audioContext.sampleRate });\n\n            this._fbc = this._analyser.frequencyBinCount;\n            // calculate the height of each band element using frequency data\n            for (var i = 0; i < this._fbc; i++) {\n                this.bands[i].dB = this._data[i];\n                // this.bands[i].dB >= this.bands[i].\n\n                // SENSITIVITY SCORE 0 - 255\n                // current dB is within how much of the sensitivity range\n                const ratio = this.bands[i].dB - this.bands[i].sensitivity;\n                // console.log(ratio);\n                if (ratio >= 0) {\n                    this.sensitivityRequest(ratio);\n                }\n            }\n        }, time);\n    }\n\n    private connectStream(stream: MediaStream) {\n        this._analyser.minDecibels = -90;\n        this._analyser.maxDecibels = -10;\n        this._analyser.fftSize = 32;\n\n        // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createMediaStreamSource\n        this._source = this._audioContext.createMediaStreamSource(stream);\n\n        // https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode\n        // MDN An AnalyserNode has exactly one input and one output. The node works even if the output is not connected.\n        this._source.connect(this._analyser);\n\n        // setup the frequency labels for the bands\n        this.freqs = this.calcFreqs(this._analyser.context.sampleRate, this._analyser.fftSize);\n\n        // set context.status: running\n        this._audioContext.resume();\n    }\n\n    // calculate the frequency resolutions being displayed - sampleRate / eq band count\n    private calcFreqs(sampleRate, fftSize) {\n        const bands = fftSize / 2; // bands are half the fftSize\n        let fqRange = sampleRate / 2;\n        const fqBand = sampleRate / fftSize;\n        let allocated = [];\n        // setup eqbands and labels\n        for (let i = 0, j = bands; i < j; i++) {\n            this.bands[i] = {\n                'dB': undefined,\n                'sensitivity': 50\n            }\n            // frequency labels\n            // sampleRate = Math.round(sampleRate - fqRange);\n            fqRange = Math.round(fqRange - fqBand);\n            allocated.push(fqRange);\n        }\n        return allocated.slice().reverse();\n    }\n\n    // Add range values to their band data\n    public updateBandSense(band: { sensitivity: number, id: number }) {\n        this.bands[band.id].sensitivity = band.sensitivity;\n    }\n\n    // PRESS play button (or select an audio device)\n    public play() {\n        navigator.mediaDevices.getUserMedia({\n            audio: { deviceId: this._audioDeviceId ? { exact: this._audioDeviceId } : undefined }\n        }).then((stream: MediaStream) => {\n            this.connectStream(stream);\n            this.frameLooper();\n        });\n    }\n    public stop() {\n        clearInterval(this._intervalID);\n    }\n    public onSelect(target:any){\n        const elm = target as HTMLSelectElement;\n        this._audioDeviceId = elm.value;\n        if (this._audioDeviceId) {\n            this.play();\n        }\n        // console.log(this._audioDeviceId);\n    }\n    // optimize ngFor\n    public trackByFn(index, item) {\n        return index; // or item.id\n    }\n\n    public ngOnDestroy(): void {\n        this._ngUnsubscribe.next();\n        this._ngUnsubscribe.complete();\n        this.stop();\n        this._intervalID = null;\n    }\n}\n","<nav>\n    <img src=\"./assets/stop.svg\" alt=\"stop audio feed\" (click)=\"stop()\"/>\n    <img src=\"./assets/play.svg\" alt=\"play audio feed\" (click)=\"play()\"/>\n    <select name=\"devices\" (change)=\"onSelect($event.target)\">\n        <option *ngFor=\"let device of devices;\" [value]=\"device.deviceId\">{{device.label}}</option>\n    </select>\n</nav>\n<div class=\"eq-wrapper\">\n    <div class=\"eqbands\">\n        <ng-container *ngFor=\"let band of bands; index as i; trackBy: trackByFn;\">\n            <band [dB]=\"band.dB\" (senseVal)=\"updateBandSense({sensitivity: $event, id: i})\"></band>\n        </ng-container>\n    </div>\n    <div class=\"freqs\">\n        <div class=\"freq\" *ngFor=\"let freq of freqs;\">{{freq}}+</div>\n    </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}